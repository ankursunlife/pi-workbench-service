package com.aarete.pi.bean;

import java.math.BigDecimal;
import java.sql.Date;
import java.util.List;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@AllArgsConstructor
@NoArgsConstructor
@ApiModel(description = "This bean will be sent when claim line list is called as well as claim line details are called.")
public class ClaimLineBean {

	@ApiModelProperty(notes = "Autogenerated by DB")
	private long claimLineId;

	private long claimNum;

	private int claimLineNum;

	private String billTypeCode;

	private String billingProviderFullName;

	private int aareteMemberId;

	private String claimFormTypeCode;

	private String diagnosisCode1;

	private String diagnosis1Desc;

	private long batchId;

	private Date receivedDate;

	private Date paidDate;

	private Date claimStartDate;

	private Date claimEndDate;

	private int typeOfService;

	private BigDecimal linePaidAmount;

	private BigDecimal lineBilledAmount;

	private BigDecimal lineAllowedAmount;

	private String revenueCode;

	private String revenueDesc;

	@ApiModelProperty(notes = "Will be marked as CLOSED once workflow is completed and wont be availble on MyQueue page. Will not have typical status like PEND, WAITING", example = "CLOSED")
	private String claimStatusCode;

	private int procedureCode1;

	private int posId;

	@ApiModelProperty(notes = "Email/User Id")
	private String approverLevelOne;

	@ApiModelProperty(notes = "Email/User Id")
	private String approverLevelTwo;

	@ApiModelProperty(notes = "Email/User Id")
	private String approverLevelThree;

	@ApiModelProperty(notes = "Email/User Id")
	private String approverLevelFour;

	@ApiModelProperty(notes = "Status of the level", example = "GROUP_QUEUE,MY_QUEUE,PEND,WAITING")
	private String claimStatusLevelOne;

	@ApiModelProperty(notes = "Status of the level", example = "GROUP_QUEUE,MY_QUEUE,PEND,WAITING")
	private String claimStatusLevelTwo;

	@ApiModelProperty(notes = "Status of the level", example = "GROUP_QUEUE,MY_QUEUE,PEND,WAITING")
	private String claimStatusLevelThree;

	@ApiModelProperty(notes = "Status of the level", example = "GROUP_QUEUE,MY_QUEUE,PEND,WAITING")
	private String claimStatusLevelFour;

	private String engagementId;

	private String billingProviderNumber;

	private String renderingProviderNumber;

	private String lobId;

	private String pillarId;

	private String pillarName;

	private String stateId;

	private BigDecimal lineOpportunityAmount;// TODO Calculated dynamically based on highest Confidence ExCodeId

	private int units;

	private String productType;

	private String aareteFinalClaimStatusCode;

	private String memberId;

	private String billingProviderSpecialityOne;

	private String billingProviderSpecialityTwo;

	private long billingProviderNpi;

	private long billingProviderIrs;

	@ApiModelProperty(notes = "When called for PEND status")
	private String pendAssignerUserName;

	@ApiModelProperty(notes = "When called for PEND status")
	private String pendReason;

	private MemberBean member;

	private ProviderBean provider;

	@ApiModelProperty(notes = "List of diagnosis code that need to be shown on Claimline Details screen for Diagnosis Hx")
	private List<DiagnosisBean> diagnosisBeanList;

	private List<ExCodeBean> exCodeBeanList;

	@ApiModelProperty(notes = "ExCode of the highest confidence score")
	private String highestConfidenceExCodeId; // TODO Need to calculate dynamically based on highest confidence

	@ApiModelProperty(notes = "Populated for claim details call only")
	private List<ClaimLineBean> opportunityClaimList;

	private String subProductCode;

	private String memberStateCode;

	private String exCode;

	private String cptCode;

	private String cptDesc;

	private long modelScore;

	private boolean tagged;

	private String sequence;

	private String drgCode;

	private String modifier;

	private Date batchDate;

	private String edit;

	private String approverLevelOneGroup;

	private String approverLevelTwoGroup;

	private String approverLevelThreeGroup;

	private String approverLevelFourGroup;

	@ApiModelProperty(notes = "AArete user action. Show as 'User Action' to Aarete Manager.", example = "ACCEPT, REJECT")
	private String approverOneAction;

	@ApiModelProperty(notes = "AArete Manager action", example = "APPROVE, REJECT")
	private String approverTwoAction;

	@ApiModelProperty(notes = "Client user action. Show as 'User Action' to Client Manager.", example = "APPROVE, REJECT")
	private String approverThreeAction;

	@ApiModelProperty(notes = "Client Manager action", example = "APPROVE, REJECT")
	private String approverFourAction;
	
	@ApiModelProperty(notes = "This is ExCode level", example = "CLAIM,CLAIM_LINE")
	private String exCodeLevel;

	@ApiModelProperty(notes = "This is ExCode level", example = "Multi-Line, Single")
	private String editType;

	private BigDecimal prioritizationScore;

	private String orderRating;

	private String assigner;

	private String overrideReason;

	private int noOfClaimLines;

	private String aareteUserPendReason;

	private String clientUserPendReason;

	private String aareteUserOverrideReason;

	private String clientUserOverrideReason;

	private String aareteUserAssigner;

	private String clientUserAssigner;

	private String aareteManagerAssigner;

	private String clientManagerAssigner;

	private String aareteAssignedUser;

	private String clientAssignedUser;

	private String createdBy;

	private BigDecimal adjustmentAmount;
	
	private float confidenceScore;

}